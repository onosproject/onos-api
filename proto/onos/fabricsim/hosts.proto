// SPDX-FileCopyrightText: 2022-present Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package onos.fabricsim;

import "gogoproto/gogo.proto";
import "onos/fabricsim/devices.proto";

// Host describes a simulated host (bare metal, VM or container)
message Host {
    // unique host id
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "HostID"];

    // network interfaces
    repeated NetworkInterface interfaces = 2;
    GridPosition pos = 3;
}

// NetworkInterface describes simulated host's attachment to the network
message NetworkInterface {
    // unique port id
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "PortID"];

    // mac address
    string mac_address = 2;

    // ipv4 address
    string ip_address = 3;
    // ipv6 address
    string ipv6_address = 4;

    // behavior
    NetworkInterfaceBehavior behavior = 5;
}

// NetworkInterfaceBehavior describes dynamic aspects of a simulated host interface
// and how it manifests its presence on the network.
message NetworkInterfaceBehavior {
    // TBD
}

// HostService provides means to control inventory of simulated hosts
service HostService {
    // GetHosts gets a list of all simulated hosts
    rpc GetHosts(GetHostsRequest) returns (GetHostsResponse);

    // GetHost gets a specific host entry
    rpc GetHost(GetHostRequest) returns (GetHostResponse);

    // AddHost adds a new simulated host
    rpc AddHost(AddHostRequest) returns (AddHostResponse);

    // RemoveHost removes a simulated host
    rpc RemoveHost(RemoveHostRequest) returns (RemoveHostResponse);

    // EmitARPs triggers the specified host NIC to send ARP requests for a set of IP addresses
    rpc EmitARPs(EmitARPsRequest) returns (EmitARPsResponse);
}

message GetHostsRequest {
    // filters?
}

message GetHostsResponse {
    repeated Host hosts = 1;
}

message GetHostRequest {
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "HostID"];
}

message GetHostResponse {
    Host host = 1;
}

message AddHostRequest {
    Host host = 1;
}

message AddHostResponse {
}

message RemoveHostRequest {
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "HostID"];
}

message RemoveHostResponse {
}

message EmitARPsRequest {
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "HostID"];
    string mac_address = 2;
    repeated string ip_addresses = 3;
}

message EmitARPsResponse {
}