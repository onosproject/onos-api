// SPDX-FileCopyrightText: 2022-present Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package onos.provisioner;

import "gogoproto/gogo.proto";

// PipelineConfigService
service PipelineConfigService {
  // Add registers new pipeline configuration
  rpc Add(AddPipelineConfigRequest) returns (AddPipelineConfigResponse);

  // Delete removes a pipeline configuration
  rpc Delete(DeletePipelineConfigRequest) returns (DeletePipelineConfigResponse);

  // Get returns pipeline configuration based on a given ID
  rpc Get(GetPipelineConfigRequest) returns (GetPipelineConfigResponse);

  // List returns all registered pipelines
  rpc List(ListPipelineConfigsRequest) returns (stream ListPipelineConfigsResponse);
}

// PipelineConfig
message PipelineConfig {
  string config_id = 1 [(gogoproto.customname) = "ConfigID", (gogoproto.casttype) = "ConfigID"];
  uint64 revision = 2 [(gogoproto.casttype) = "Revision"];

  bytes p4_info = 3;
  bytes p4_binary = 4;
}

message AddPipelineConfigRequest {
  PipelineConfig config = 1;
}

message AddPipelineConfigResponse {
}

message DeletePipelineConfigRequest {
  PipelineConfig pipeline_config = 1; // config_id and revision must be present; all others optional
}

message DeletePipelineConfigResponse {
}

message GetPipelineConfigRequest {
  string config_id = 1 [(gogoproto.customname) = "ConfigID", (gogoproto.casttype) = "ConfigID"];
}

message GetPipelineConfigResponse {
  PipelineConfig config = 1;
}

message ListPipelineConfigsRequest {
  bool watch = 1;
}

message ListPipelineConfigsResponse {
  PipelineConfig config = 1;
}
