// SPDX-FileCopyrightText: 2019-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package onos.topo;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";


// Basic asset information
message Asset {
    string name = 1;
    string manufacturer = 2;
    string model = 3;
    string serial = 4;
    string asset = 5;
    string sw_version = 6;
    string role = 8;
}

// Configurable device aspect
message Configurable {
    string type = 1;
    string address = 2;
    string target = 3;
    string version = 4;
    google.protobuf.Duration timeout = 5 [(gogoproto.stdduration) = true];
    bool persistent = 6;
    bool validate_capabilities = 7;
}

// Aspect for tracking device mastership
message MastershipState {
    uint64 term = 1;
    string node_id = 2;
}

// TLS connectivity aspect
message TLSOptions {
    bool insecure = 1;
    bool plain = 2;
    string key = 3;
    string ca_cert = 4;
    string cert = 5;
}

// Aspect for ad-hoc properties
message AdHoc {
    map<string, string> properties = 1;
}

// ProtocolState contains information related to service and connectivity to a device
message ProtocolState {

    //The protocol to which state relates
    Protocol protocol = 1;

    //ConnectivityState contains the L3 connectivity information
    ConnectivityState connectivityState = 2;

    //ChannelState relates to the availability of the gRPC channel
    ChannelState channelState = 3;

    //ServiceState indicates the availability of the gRPC servic on top of the channel
    ServiceState serviceState = 4;
}

// Protocol to interact with a device
enum Protocol {
    //UNKNOWN_PROTOCOL constant needed to go around proto3 nullifying the 0 values
    UNKNOWN_PROTOCOL = 0;

    // GNMI protocol reference
    GNMI = 1;

    // P4RUNTIME protocol reference
    P4RUNTIME = 2;

    // GNOI protocol reference
    GNOI = 3;

    // E2 Control Plane Protocol
    E2AP = 4;
}

//ConnectivityState represents the L3 reachability of a device from the service container (e.g. enos-config), independently of gRPC or the service itself (e.g. gNMI)
enum ConnectivityState {
    //UNKNOWN_CONNECTIVITY_STATE constant needed to go around proto3 nullifying the 0 values
    UNKNOWN_CONNECTIVITY_STATE = 0;

    // REACHABLE indicates the the service can reach the device at L3
    REACHABLE = 1;

    // UNREACHABLE indicates the the service can't reach the device at L3
    UNREACHABLE = 2;
}

//ConnectivityState represents the state of a gRPC channel to the device from the service container
enum ChannelState {
    //UNKNOWN_CHANNEL_STATE constant needed to go around proto3 nullifying the 0 values
    UNKNOWN_CHANNEL_STATE = 0;

    // CONNECTED indicates the corresponding grpc channel is connected on this device
    CONNECTED = 1;

    // DISCONNECTED indicates the corresponding grpc channel is not connected on this device
    DISCONNECTED = 2;
}

//ServiceState represents the state of the gRPC service (e.g. gNMI) to the device from the service container
enum ServiceState {
    //UNKNOWN_SERVICE_STATE constant needed to go around proto3 nullifying the 0 values
    UNKNOWN_SERVICE_STATE = 0;

    // AVAILABLE indicates the corresponding grpc service is available
    AVAILABLE = 1;

    // UNAVAILABLE indicates the corresponding grpc service is not available
    UNAVAILABLE = 2;

    // CONNECTING indicates the corresponding protocol is in the connecting phase on this device
    CONNECTING = 3;
}

//Protocols 
message Protocols {
    repeated ProtocolState state = 1;
}
