// SPDX-FileCopyrightText: 2022-present Intel Corporation
// SPDX-FileCopyrightText: 2019-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package onos.topo;

import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// TODO: Deprecate! Use language specific constant definitions instead.
// Kinds of RAN entities
enum RANEntityKinds {
    E2NODE = 0;
    E2CELL = 1;
    E2T = 3;
    XAPP = 4;
    A1T = 5;
}

// TODO: Deprecate! Use language specific constant definitions instead.
// Kinds of RAN relations
enum RANRelationKinds {
    CONTROLS = 0;
    CONTAINS = 1;
    NEIGHBORS = 2;
}

enum CellGlobalIDType {
    NRCGI = 0; // 5G cell ID
    ECGI = 1; // 4G cell ID
}

// NodeType is for use in encoding node type in topo Entity URI identifier; see section 9.2.6 of ORAN E2AP v02.00 spec
enum NodeType {
    NT_NONE = 0;
    NT_GNB = 1;
    NT_EN_GNB = 2;
    NT_NG_ENB = 3;
    NT_ENB = 4;
    // Add new types here. DO NOT change ordinals of existing values.
}

// ComponentType is for use in encoding node component type in topo Entity URI identifier; see section 9.2.6 of ORAN E2AP v02.00 spec
enum ComponentType {
    CT_NONE = 0;
    CT_CU = 1;
    CT_CU_UP = 2;
    CT_DU = 3;
    CT_ENB = 4;
    // Add new types here. DO NOT change ordinals of existing values.
}

message Location {
    // Legacy Geographical location; expected value type of "location" aspect
    double lat = 1 [deprecated=true];
    double lng = 2 [deprecated=true];
    oneof ext {
        Wgs84Location wgs84 = 3;
        CartesianLocation cartesian = 4;
    }
}

message Wgs84Location {
    // Latitude in degrees, between +/- 90.
    double latitude_deg = 1;

    // Longitude in degrees, between +/- 180.
    double longitude_deg = 2;

    // Altitude in meters, from the surface of the WGS-84 ellipsoid.
    double altitude_m = 3;
}

// ECEF-compatible cartesian coordinates.
message CartesianLocation {
    // X, Y, and Z coordinates in meters.
    double x_m = 1;
    double y_m = 2;
    double z_m = 3;
}

message AzElOrientation {
    // Azimuth angle in degrees.
    double azimuth_deg = 1;
    // Elevation angle in degrees.
    double elevation_deg = 2;
    // Rotation around boresight in degrees.
    double rotation_deg = 3;
}

message YprOrientation {
    // Yaw angle around z-axis.
    double yaw_deg = 1;
    // Pitch angle around y-axix.
    double pitch_deg = 2;
    // Roll angle around x-axis.
    double roll_deg = 3;
}

message Orientation {
    oneof orientation {
        AzElOrientation azel = 1;
        YprOrientation ypr = 2;
    }
}

message Waypoint {
    google.protobuf.Timestamp time = 1;
    Location location = 2;
}

// A set of waypoints that can be interpolated.
message Waypoints {
    repeated Waypoint waypoint = 1;
}

// Minimal satellite orbit data, e.g. from a TLE, that can be propagated.
message OrbitData {
    google.protobuf.Timestamp epoch = 1;

    // Orbit inclination in degrees.
    double inclination_deg = 2;
    // Right ascension of the ascending node in degrees.
    double raan_deg = 3;
    // Orbit eccentricity.
    double e = 4;
    // Argument of perigee in degrees.
    double argument_deg = 5;
    // Mean anomaly in degrees.
    double anomaly_deg = 6;
    // Mean motion in revolutions per day.
    double mean_motion = 7;
}

message Motion {
    oneof motion {
        Location fixed_location = 1;
        Waypoints waypoints = 2;
        OrbitData orbit = 3;
    }
}

// Area of coverage; expected value type of "coverage" aspect
message Coverage {
    int32 height = 1;
    int32 arc_width = 2;
    int32 azimuth = 3;
    int32 tilt = 4;
}

// E2Node aspect; expected value type of "E2NODE" aspect and expected on entities of "E2NODE" kind
message E2Node {
    map<string, ServiceModelInfo> service_models = 1; // map of oid to service model info
}

// E2NodeConfig aspect tracks the managed configuration for an E2 node
message E2NodeConfig {
    repeated Interface connections = 1 [(gogoproto.nullable) = false];
    uint64 version = 2;
}

// Lease aspect with an expiration timestamp for RAN entities
message Lease {
    google.protobuf.Timestamp expiration = 1 [(gogoproto.stdtime) = true];
}

// Interface determines address and type of an endpoint interface
message Interface {
    Type type = 1;
    string ip = 2 [(gogoproto.customname) = "IP"];
    uint32 port = 3;

    enum Type {
        INTERFACE_UNKNOWN = 0;
        INTERFACE_E2T = 1;
        INTERFACE_E2AP101 = 2;
        INTERFACE_E2AP200 = 3;
        INTERFACE_A1_XAPP = 4;
        INTERFACE_A1AP = 5;
    }
}

// E2TInfo E2T aspect;
message E2TInfo {
    repeated Interface interfaces = 1;
}

message XAppInfo {
    repeated Interface interfaces = 1;
    repeated A1PolicyType a1_policy_types = 2;
}

message A1PolicyType {
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "PolicyTypeID"];
    string name = 2 [(gogoproto.customname) = "Name", (gogoproto.casttype) = "PolicyTypeName"];
    string version = 3 [(gogoproto.customname) = "Version", (gogoproto.casttype) = "PolicyTypeVersion"];
    string description = 4 [(gogoproto.customname) = "Description", (gogoproto.casttype) = "PolicyTypeDescription"];
}

message A1TInfo {
    repeated Interface interfaces = 1;
}

message CellGlobalID {
    string value = 1;
    CellGlobalIDType type = 2;
}

message NeighborCellID {
    CellGlobalID cell_global_id = 1 [(gogoproto.customname) = "CellGlobalID"];
    string plmn_id = 2 [(gogoproto.customname) = "PlmnID"];
}

// E2Cell aspect; expected value type of "E2CELL" aspect and expected on entities of "E2CELL" kind
message E2Cell {
    string cell_object_id = 1 [(gogoproto.customname) = "CellObjectID"];
    CellGlobalID cell_global_id = 2 [(gogoproto.customname) = "CellGlobalID"];
    uint32 antenna_count = 3;
    uint32 arfcn = 4 [(gogoproto.customname) = "ARFCN"];
    string cell_type = 5;
    uint32 pci = 6  [(gogoproto.customname) = "PCI"];
    map<string, uint32> kpi_reports = 7 [(gogoproto.customname) = "KpiReports"];
    repeated NeighborCellID neighbor_cell_ids = 8 [(gogoproto.customname) = "NeighborCellIDs"];
    uint32 gnb_du_id = 9;
    uint32 latest_rrc_version = 10;
    uint32 plmn_id = 11;
    repeated uint32 served_plmns = 12;
    oneof nr_mode_info {
        FDDInfo fdd_info = 13;
        TDDInfo tdd_info = 14;
    }
    uint32 measurement_timing_configuration = 15;
    GlobalNgRanNodeID global_ng_ran_node_id = 16;
    TaiSupportList tai_support_list = 17;
    AmfRegionInformation amf_region_information = 18;
    ConnectivitySupport connectivity_support = 19;
    repeated NeighborInformationNr neighbor_information_nrs = 20;
}

message ConnectivitySupport {
    EnDcSupport en_dc_support = 1;
}

message FDDInfo {
    FrequencyInfo ul_freq_info = 1;
    FrequencyInfo dl_freq_info = 2;
    TransmissionBandwidth ul_transmission_bandwidth = 3;
    TransmissionBandwidth dl_transmission_bandwidth = 4;
}

message TDDInfo {
    FrequencyInfo nr_freq_info = 1;
    TransmissionBandwidth transmission_bandwidth = 2;
}

message FrequencyInfo {
    uint32 nr_arfcn = 1;
    FrequencyBandList frequency_band_list = 2;
}

message TransmissionBandwidth {
    NrScs nr_scs = 1;
    Nrb nrb = 2;
}

message FrequencyBandList {
    repeated FrequencyBandItem frequency_band_items = 1;
}

message FrequencyBandItem {
    uint32 nr_frequency_band = 1;
}

message GlobalNgRanNodeID {
    oneof global_ng_ran_node_id {
        GlobalGnbID global_gnb_id = 1;
        GlobalNgEnbID global_ng_enb_id = 2;
    }
}

message GlobalGnbID {
    uint32 plmn_id = 1;
    uint32 gnb_id = 2;
    uint32 gnb_id_len = 3;
}

message GlobalNgEnbID {
    uint32 plmn_id = 1;
    oneof ng_enb_id {
        uint32 macro_ng_enb_id = 2;
        uint32 short_macro_ng_enb_id = 3;
        uint32 long_macro_ng_enb_id = 4;
    }
}

message TaiSupportList {
    repeated TaiSupportItem tai_support_items = 1;
}

message TaiSupportItem {
    uint32 tac = 1;
    repeated XnBroadcastPlmn broadcast_plmns = 2;
}

message XnBroadcastPlmn {
    uint32 plmn_id = 1;
    TaiSliceSupportList tai_slice_support_list = 2;
}

message TaiSliceSupportList {
    repeated SliceSupportItem slice_support_items = 1;
}

message SliceSupportItem {
    SNssai s_nssai = 1;
}

message SNssai {
    uint32 sst = 1;
    uint32 sd = 2;
}

message AmfRegionInformation {
    repeated GlobalAmfRegionInformationItem global_amf_region_information_items = 1;
}

message GlobalAmfRegionInformationItem {
    uint32 plmn_id = 1;
    uint32 amf_region_id = 2;
}

message NeighborInformationNr {
    uint32 pci = 1;
    NeighborCellID nr_cgi = 2;
    uint32 tac = 3;
    oneof nr_mode_info {
        FDDInfo fdd_info = 4;
        TDDInfo tdd_info = 5;
    }
    ConnectivitySupport connectivity_support = 6;
    uint32 measurement_timing_configuration = 7;
}

// Each entity with an E2Cell persona is expected to be a target of one and only one "CONTROLS" relation with a node
// that has an E2Node persona.

// Each entity with an E2Cell persona is expected to be the source of zero or more "NEIGHBORS" relations with target
// of another entity with an E2Node persona.

message ServiceModelInfo {
    string oid = 1 [(gogoproto.customname) = "OID"];
    string name = 2;
    repeated google.protobuf.Any ran_functions = 3;
    repeated uint32 ranFunctionIDs = 4;
}

message RCRanFunction {
    string id = 1 [(gogoproto.customname) = "ID"];
    repeated RCReportStyle report_styles = 2;
    repeated RCInsertStyle insert_styles = 3;
    repeated RCEventTriggerStyle event_trigger_styles = 4;
    repeated RCPolicyStyle policy_styles = 5;
    repeated RCControlStyle control_styles = 6;
}

message MHORanFunction {
    string id = 1 [(gogoproto.customname) = "ID"];
    repeated MHOReportStyle report_styles = 2;
}

message CCCRanFunction {
    string id = 1 [(gogoproto.customname) = "ID"];
    repeated RanconfigurationStructure ran_structures = 2;
    repeated CellsForRanfunctionDefinition cells_ran_definition = 3;
}

message KPMRanFunction {
    string id = 1 [(gogoproto.customname) = "ID"];
    repeated KPMReportStyle report_styles = 2;
}

message RSMRanFunction {
    string id = 1 [(gogoproto.customname) = "ID"];
    repeated RSMNodeSlicingCapabilityItem ric_slicing_node_capability_list = 2;
}

message RCEventTriggerStyle {
    string name = 1;
    int32 type = 2;
    int32 format_type = 3;
}

message RCReportStyle {
    string name = 1;
    int32 type = 2;
    repeated RANParameter ran_parameters = 3;
}

message RCInsertStyle {
    string name = 1;
    int32  type = 2;
    repeated InsertIndication insert_indications = 3;
}

message RCPolicyStyle {
    string name = 1;
    int32 type = 2;
    repeated PolicyAction policy_actions = 3;
}

message PolicyAction {
    int32 id = 1 [(gogoproto.customname) = "ID"];
    string name = 2;
    repeated RANParameter policy_action_ran_parameters = 3;
    repeated RANParameter policy_condition_ran_parameters = 4;
}

message RCControlStyle {
    string name = 1;
    int32 type = 2;
    int32 header_format_type = 3;
    int32 message_format_type = 4;
    int32 control_outcome_format_type = 5;
    repeated ControlAction control_actions = 6;
}

message ControlAction {
    int32 id = 1 [(gogoproto.customname) = "ID"];
    string name = 2;
    repeated RANParameter ran_parameters = 3;
}

message InsertIndication {
    int32 id = 1 [(gogoproto.customname) = "ID"];
    string name = 2;
    repeated RANParameter ran_parameters = 3;

}

message RANParameter {
    int64 id = 1 [(gogoproto.customname) = "ID"];
    string name = 2;
}

message RanconfigurationStructure {
    string name = 1;
    repeated Attribute attribute = 2;
}

message Attribute {
    string name = 1;
    RICServices ric_services = 2;
}

message RICServices {
    repeated CCCEventTriggerStyle event_trigger_styles = 1;
    repeated CCCReportStyle report_styles = 2;
    repeated CCCInsertStyle insert_styles = 3;
    repeated CCCControlStyle control_styles = 4;
    repeated CCCPolicyStyle policy_styles = 5;
}

message CellsForRanfunctionDefinition {
    CellGlobalID cell_global_id = 1;
    repeated CellForRanfunctionDefinition cell_function_definition = 2;
}

message CellForRanfunctionDefinition {
    string name = 1;
    repeated Attribute attribute = 2;
}

message CCCEventTriggerStyle {
    string name = 1;
    int32 type = 2;
    int32 format_type = 3;
}

message CCCReportStyle {
    string name = 1;
    int32 type = 2;
    repeated int32 event_trigger_style_for_report = 3;
    int32 action_definition_format_type = 4;
    int32 indication_header_format_type = 5;
    int32 indication_message_format_type = 6;
}

message CCCInsertStyle {
    google.protobuf.Empty value = 1;
}

message CCCControlStyle {
    int32 type = 1;
    string name = 2;
    int32 control_header_format_type = 3;
    int32 control_message_format_type = 4;
    int32 ric_process_id_format_type = 5;
    int32 control_outcome_format_type = 6;
}

message CCCPolicyStyle {
    google.protobuf.Empty value = 1;
}

// enumerated from e2sm_ccc.asn1:141
enum ResourceType {
    RESOURCE_TYPE_PRB_UL = 0;
    RESOURCE_TYPE_PRB_DL = 1;
    RESOURCE_TYPE_DRB = 2;
    RESOURCE_TYPE_RRC = 3;
}

// enumerated from e2sm_ccc.asn1:143
enum SchedulerType {
    CCC_SCHEDULER_TYPE_ROUND_ROBIN = 0;
    CCC_SCHEDULER_TYPE_PROPORTIONALLY_FAIR = 1;
    CCC_SCHEDULER_TYPE_QOS_BASED = 2;
}

// enumerated from e2sm_ccc.asn1:137
enum ChangeType {
    CHANGE_TYPE_NONE = 0;
    CHANGE_TYPE_MODIFICATION = 1;
    CHANGE_TYPE_ADDITION = 2;
    CHANGE_TYPE_DELETION = 3;
}

// range of Integer from e2sm_common_ies.asn1:444
message Plmnidentity {
    bytes value = 1;
}

// range of Integer from e2sm_common_ies.asn1:460
message Sst {
    bytes value = 1;
}

// range of Integer from e2sm_common_ies.asn1:450
message Sd {
    bytes value = 1;
}

// sequence from e2sm_common_ies.asn1:454
message SNSsai {
    Sst sst = 1;
    Sd sd = 2;
}

// sequence from e2sm_ccc.asn1:161
message RrmPolicyMember {
    Plmnidentity plmn_id = 1;
    SNSsai snssai = 2;
}

// sequence from e2sm_ccc.asn1:167
message RrmPolicyMemberList {
    repeated RrmPolicyMember rrm_policy_member = 1;
}

// sequence from e2sm_ccc.asn1:229
// {O-RRMPolicyRatio}
message ORRmpolicyRatio {
    ResourceType resource_type = 1;
    SchedulerType scheduler_type = 2;
    RrmPolicyMemberList rrm_policy_member_list = 3;
    int32 rrm_policy_max_ratio = 4;
    int32 rrm_policy_min_ratio = 5;
    int32 rrm_policy_dedicated_ratio = 6;
}

message ConfigurationStructure {
    ChangeType change_type = 1;
    string configuration_name = 2;
    ORRmpolicyRatio policy_ratio = 3;
    ORRmpolicyRatio old_policy_ratio = 4;
}

message ConfigurationStructureList {
    repeated ConfigurationStructure configuration_structure = 1;
}

message KPMReportStyle {
    string name = 1;
    int32 type = 2;
    repeated KPMMeasurement measurements = 3;
}

message MHOReportStyle {
    string name = 1;
    int32 type = 2;
}

message KPMMeasurement {
    string id = 1 [(gogoproto.customname) = "ID"];
    string name = 2;
}

message RSMNodeSlicingCapabilityItem {
    int32 max_number_of_slices_dl = 1;
    int32 max_number_of_slices_ul = 2;
    RSMSlicingType slicing_type = 3;
    int32 max_number_of_ues_per_slice = 4;
    repeated RSMSupportedSlicingConfigItem supported_config = 5;
}

message RSMSupportedSlicingConfigItem {
    E2SmRsmCommand slicing_config_type = 1;
}

enum E2SmRsmCommand {
    E2_SM_RSM_COMMAND_SLICE_CREATE = 0;
    E2_SM_RSM_COMMAND_SLICE_UPDATE = 1;
    E2_SM_RSM_COMMAND_SLICE_DELETE = 2;
    E2_SM_RSM_COMMAND_UE_ASSOCIATE = 3;
    E2_SM_RSM_COMMAND_EVENT_TRIGGERS = 4;
}

enum RSMSlicingType {
    SLICING_TYPE_STATIC = 0;
    SLICING_TYPE_DYNAMIC = 1;
}

enum RSMSchedulerType {
    SCHEDULER_TYPE_ROUND_ROBIN = 0;
    SCHEDULER_TYPE_PROPORTIONALLY_FAIR = 1;
    SCHEDULER_TYPE_QOS_BASED = 2;
}

message RSMSliceItemList {
    repeated RSMSlicingItem rsm_slice_list = 1;
}

message RSMSlicingItem {
    string id = 1 [(gogoproto.customname) = "ID"];
    string slice_desc = 2;
    RSMSliceParameters slice_parameters = 3;
    RSMSliceType slice_type = 4;
    repeated UeIdentity ue_id_list = 5;
}

enum RSMSliceType {
    SLICE_TYPE_DL_SLICE = 0;
    SLICE_TYPE_UL_SLICE = 1;
}

message RSMSliceParameters {
    RSMSchedulerType scheduler_type = 1;
    int32 weight = 2;
    int32 qos_level = 3;
}

enum UeIdType {
    UE_ID_TYPE_CU_UE_F1_AP_ID = 0;
    UE_ID_TYPE_DU_UE_F1_AP_ID = 1;
    UE_ID_TYPE_RAN_UE_NGAP_ID = 2;
    UE_ID_TYPE_AMF_UE_NGAP_ID = 3;
    UE_ID_TYPE_ENB_UE_S1_AP_ID = 4;
}

message DuUeF1apID {
    int64 value = 1;
}

message CuUeF1apID {
    int64 value = 1;
}

message RanUeNgapID {
    int64 value = 1;
}

message EnbUeS1apID {
    int32 value = 1;
}

message AmfUeNgapID {
    int64 value = 1;
}

message UeIdentity {
    DuUeF1apID du_ue_f1ap_id = 1 [(gogoproto.customname) = "DuUeF1apID"];
    CuUeF1apID cu_ue_f1ap_id = 2 [(gogoproto.customname) = "CuUeF1apID"];
    RanUeNgapID ran_ue_ngap_id = 3 [(gogoproto.customname) = "RANUeNgapID"];
    EnbUeS1apID enb_ue_s1ap_id = 4 [(gogoproto.customname) = "EnbUeS1apID"];
    AmfUeNgapID amf_ue_ngap_id = 5 [(gogoproto.customname) = "AMFUeNgapID"];
    UeIdType preferred_id_type = 6 [(gogoproto.customname) = "PreferredIDType"];
    DrbId drb_id = 7;
}

message DrbId {
    oneof drb_id {
        FourGDrbId four_gdrb_id = 1 [ json_name="fourGDrbID"];
        FiveGDrbId five_gdrb_id = 2 [ json_name="fiveGDrbID"];
    }
}

message FiveGDrbId {
    int32 value = 1;
    Qfi qfi = 2;
    repeated QoSflowLevelParameters flows_map_to_drb = 3;
}

message Qfi {
    int32 value = 1;
}

message QoSflowLevelParameters {
    oneof qos_flow_level_parameters {
        DynamicFiveQi dynamic_five_qi = 1;
        NonDynamicFiveQi non_dynamic_five_qi = 2;
    }
}

message DynamicFiveQi {
    int32 priority_level = 1;
    int32 packet_delay_budge = 2;
    int32 packet_error_rate = 3;
}

message NonDynamicFiveQi {
    FiveQi five_qi = 1;
}

message FiveQi {
    int32 value = 1;
}

message FourGDrbId {
    int32 value = 1;
    Qci qci = 2;
}

message Qci {
    int32 value = 1;
}

enum NrScs {
    SCS_UNKNOWN = 0;
    SCS_15 = 1;
    SCS_30 = 2;
    SCS_50 = 3;
    SCS_120 = 4;
}

enum Nrb {
    NRB_UNKNOWN = 0;
    NRB_11 = 1;
    NRB_18 = 2;
    NRB_24 = 3;
    NRB_25 = 4;
    NRB_31 = 5;
    NRB_32 = 6;
    NRB_38 = 7;
    NRB_51 = 8;
    NRB_52 = 9;
    NRB_65 = 10;
    NRB_66 = 11;
    NRB_78 = 12;
    NRB_79 = 13;
    NRB_93 = 14;
    NRB_106 = 15;
    NRB_107 = 16;
    NRB_121 = 17;
    NRB_132 = 18;
    NRB_133 = 19;
    NRB_135 = 20;
    NRB_160 = 21;
    NRB_162 = 22;
    NRB_189 = 23;
    NRB_216 = 24;
    NRB_217 = 25;
    NRB_245 = 26;
    NRB_264 = 27;
    NRB_270 = 28;
    NRB_273 = 29;
}

enum EnDcSupport {
    EN_DC_SUPPORT_UNKNOWN = 0;
    EN_DC_SUPPORT_SUPPORTED = 1;
    EN_DC_SUPPORT_NOT_SUPPORTED = 2;
}
