// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

// Package onos.e2t.e2.v1beta1 defines the interior gRPC interfaces for xApps to interact with E2T.
package onos.e2t.e2.v1beta1;

import "gogoproto/gogo.proto";

option (gogoproto.goproto_registration) = true;

message RequestHeaders {
    string app_id = 1 [(gogoproto.customname) = "AppID", (gogoproto.casttype) = "AppID"];
    string app_instance_id = 2 [(gogoproto.customname) = "AppInstanceID", (gogoproto.casttype) = "AppInstanceID"];
    string e2_node_id = 3 [(gogoproto.casttype) = "E2NodeID", (gogoproto.customname) = "E2NodeID"];
    ServiceModel service_model = 4 [(gogoproto.nullable) = false];
    Encoding encoding = 5;
}

message ResponseHeaders {
    Encoding encoding = 1;
}

message ServiceModel {
    string name = 1 [(gogoproto.casttype) = "ServiceModelName"];
    string version = 2 [(gogoproto.casttype) = "ServiceModelVersion"];
}

enum Encoding {
    PROTO = 0;
    ASN1_PER = 1;
    ASN1_XER = 2;
}

// Error is an E2AP protocol error
message Error {
    Cause cause = 1;

    message Cause {
        oneof cause {
            Unknown unknown = 1;
            Protocol protocol = 2;
            Ric ric = 3;
            RicService ric_service = 4;
            Transport transport = 5;
            Misc misc = 6;
        }

        message Unknown {

        }

        message Misc {
            Type type = 1;
            enum Type {
                UNSPECIFIED = 0;
                CONTROL_PROCESSING_OVERLOAD = 1;
                HARDWARE_FAILURE = 2;
                OM_INTERVENTION = 3;
            }
        }

        message Protocol {
            Type type = 1;
            enum Type {
                UNSPECIFIED = 0;
                TRANSFER_SYNTAX_ERROR = 1;
                ABSTRACT_SYNTAX_ERROR_REJECT = 2;
                ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY = 3;
                MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE = 4;
                SEMANTIC_ERROR = 5;
                ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE = 6;
            }
        }

        message Ric {
            Type type = 1;
            enum Type {
                UNSPECIFIED = 0;
                RAN_FUNCTION_ID_INVALID = 1;
                ACTION_NOT_SUPPORTED = 2;
                EXCESSIVE_ACTIONS = 3;
                DUPLICATE_ACTION = 4;
                DUPLICATE_EVENT = 5;
                FUNCTION_RESOURCE_LIMIT = 6;
                REQUEST_ID_UNKNOWN = 7;
                INCONSISTENT_ACTION_SUBSEQUENT_ACTION_SEQUENCE = 8;
                CONTROL_MESSAGE_INVALID = 9;
                CALL_PROCESS_ID_INVALID = 10;
                CONTROL_TIMER_EXPIRED = 11;
                CONTROL_FAILED_TO_EXECUTE = 12;
                SYSTEM_NOT_READY = 13;
            }
        }

        message RicService {
            Type type = 1;
            enum Type {
                UNSPECIFIED = 0;
                RAN_FUNCTION_NOT_SUPPORTED = 1;
                EXCESSIVE_FUNCTIONS = 2;
                RIC_RESOURCE_LIMIT = 3;
            }
        }

        message Transport {
            Type type = 1;
            enum Type {
                UNSPECIFIED = 0;
                TRANSPORT_RESOURCE_UNAVAILABLE = 1;
            }
        }
    }
}
