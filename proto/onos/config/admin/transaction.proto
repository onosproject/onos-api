/*
Copyright 2022-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

// Package admin defines the administrative gRPC interfaces.
package onos.config.admin;

import "gogoproto/gogo.proto";
import "onos/config/admin/admin.proto";
import "onos/config/v2/transaction.proto";

// TransactionService provides means to inspect the contents of the internal transactions store.
service TransactionService {
    // Get transaction by its ID or index
    rpc Get (GetTransactionRequest) returns (GetTransactionResponse) {
    }

    // List returns all configuration transactions
    rpc List (ListTransactionsRequest) returns (stream ListTransactionsResponse) {
    }

    // Watch returns a stream of configuration transaction change notifications
    rpc Watch (WatchTransactionsRequest) returns (stream WatchTransactionsResponse) {
    }
}

message GetTransactionRequest {
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "TransactionID"];
    uint64 index = 2 [(gogoproto.casttype) = "Index"];
}

message GetTransactionResponse {
    onos.config.v2.Transaction transaction = 1;
}

message ListTransactionsRequest {
}

message ListTransactionsResponse {
    onos.config.v2.Transaction transaction = 1;
}

message WatchTransactionsRequest {
}

// Event is a topo operation event
message TransactionEvent {
    Type type = 1;
    onos.config.v2.Transaction transaction = 2 [(gogoproto.nullable) = false];
}

message WatchTransactionsResponse {
    TransactionEvent event = 1 [(gogoproto.nullable) = false];
}
