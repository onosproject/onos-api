/*
Copyright 2021-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package onos.config.v2;

import "gogoproto/gogo.proto";

// Status is the status of a NetworkChange
message Status {
    // 'phase' is the current phase of the
    Phase phase = 1;

    // 'state' is the state of the change within a Phase
    State state = 2;

    // 'reason' is a failure reason
    Reason reason = 3;

    // message is a result message
    string message = 4;
}

// Phase is the phase of a NetworkChange
enum Phase {
    // CHANGE indicates the change has been requested
    CHANGE = 0;

    // ROLLBACK indicates a rollback has been requested for the change
    ROLLBACK = 1;
}

// State is the state of a phase
enum State {
    // PENDING indicates the phase is pending
    PENDING = 0;

    // COMPLETE indicates the phase is complete
    COMPLETE = 2;

    // FAILED indicates the phase failed
    FAILED = 3;
}

// Reason is a reason for a FAILED state
enum Reason {
    // NONE indicates no error has occurred
    NONE = 0;

    // ERROR indicates an error occurred when applying the change
    ERROR = 1;
}


// ValueType is the type for a value
enum ValueType {
    EMPTY = 0;
    STRING = 1;
    INT = 2;
    UINT = 3;
    BOOL = 4;
    DECIMAL = 5;
    FLOAT = 6;
    BYTES = 7;
    LEAFLIST_STRING = 8;
    LEAFLIST_INT = 9;
    LEAFLIST_UINT = 10;
    LEAFLIST_BOOL = 11;
    LEAFLIST_DECIMAL = 12;
    LEAFLIST_FLOAT = 13;
    LEAFLIST_BYTES = 14;
}

// TypedValue is a value represented as a byte array
message TypedValue {
    // 'bytes' is the bytes array
    bytes bytes = 1  [json_name="Bytes", (gogoproto.jsontag) = "Bytes,omitempty"];

    // 'type' is the value type
    ValueType type = 2 [json_name="Type", (gogoproto.jsontag) = "Type,omitempty"];

    // 'type_opts' is a set of type options
    repeated int32 type_opts = 3  [json_name="TypeOpts", (gogoproto.jsontag) = "TypeOpts,omitempty"];
}


// PathValue is an individual Path/Value combination
message PathValue {
    // 'path' is the path to change
    string path = 1 [json_name="Path", (gogoproto.jsontag) = "Path,omitempty"];

    // 'value' is the change value
    TypedValue value = 2 [json_name="Value", (gogoproto.jsontag) = "Value,omitempty"];
}