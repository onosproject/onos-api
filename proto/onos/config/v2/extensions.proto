/*
Copyright 2021-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package onos.config.v2;

import "gogoproto/gogo.proto";

// TransactionInfo is an extension providing information about the transaction
// to clients in responses.
message TransactionInfo {
    uint64 index = 1 [(gogoproto.casttype) = "Index"];
}

// TransactionMode is an extension for constraining the execution of a transaction for
// stronger consistency guarantees.
message TransactionMode {
    bool sync = 1;
    bool atomic = 2;
}

// Transactional is a extension that if supported by targets enables atomic
// transactions across multiple targets.
message Transactional {
    string id = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "TransactionID"];
    uint64 index = 2 [(gogoproto.casttype) = "Index"];
    TransactionalCommand command = 3;
}

enum TransactionalCommand {
    TRANSACTIONAL_PREPARE = 0;
    TRANSACTIONAL_COMMIT = 1;
    TRANSACTIONAL_ROLLBACK = 2;
}