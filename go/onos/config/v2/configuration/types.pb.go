// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: onos/config/v2/configuration/types.proto

package configuration

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	v2 "github.com/onosproject/onos-api/go/onos/config/v2"
	github_com_onosproject_onos_api_go_onos_config_v2_target "github.com/onosproject/onos-api/go/onos/config/v2/target"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State is the state of a phase
type State int32

const (
	// PENDING indicates the phase is pending
	State_PENDING State = 0
	// COMPLETE indicates the phase is complete
	State_COMPLETE State = 2
	// FAILED indicates the phase failed
	State_FAILED State = 3
)

var State_name = map[int32]string{
	0: "PENDING",
	2: "COMPLETE",
	3: "FAILED",
}

var State_value = map[string]int32{
	"PENDING":  0,
	"COMPLETE": 2,
	"FAILED":   3,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_25a794258354ae30, []int{0}
}

// Configuration represents complete desired target configuration
type Configuration struct {
	// 'id' is a unique configuration identifier
	ID ID `protobuf:"bytes,1,opt,name=id,proto3,casttype=ID" json:"id,omitempty"`
	// 'target_id' is the target to which the desired target configuration applies
	TargetID github_com_onosproject_onos_api_go_onos_config_v2_target.ID `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3,casttype=github.com/onosproject/onos-api/go/onos/config/v2/target.ID" json:"target_id,omitempty"`
	// 'target_version' is the version to which desired target configuration applies
	TargetVersion github_com_onosproject_onos_api_go_onos_config_v2_target.Version `protobuf:"bytes,3,opt,name=target_version,json=targetVersion,proto3,casttype=github.com/onosproject/onos-api/go/onos/config/v2/target.Version" json:"target_version,omitempty"`
	// 'target_type' is an optional target type to which to apply this desired target configuration
	TargetType github_com_onosproject_onos_api_go_onos_config_v2_target.Type `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3,casttype=github.com/onosproject/onos-api/go/onos/config/v2/target.Type" json:"target_type,omitempty"`
	// 'values' is a list of path/values to set
	Values []*v2.PathValue `protobuf:"bytes,7,rep,name=values,proto3" json:"values,omitempty"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_25a794258354ae30, []int{0}
}
func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return m.Size()
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetID() ID {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Configuration) GetTargetID() github_com_onosproject_onos_api_go_onos_config_v2_target.ID {
	if m != nil {
		return m.TargetID
	}
	return ""
}

func (m *Configuration) GetTargetVersion() github_com_onosproject_onos_api_go_onos_config_v2_target.Version {
	if m != nil {
		return m.TargetVersion
	}
	return ""
}

func (m *Configuration) GetTargetType() github_com_onosproject_onos_api_go_onos_config_v2_target.Type {
	if m != nil {
		return m.TargetType
	}
	return ""
}

func (m *Configuration) GetValues() []*v2.PathValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterEnum("onos.config.v2.configuration.State", State_name, State_value)
	proto.RegisterType((*Configuration)(nil), "onos.config.v2.configuration.Configuration")
}

func init() {
	proto.RegisterFile("onos/config/v2/configuration/types.proto", fileDescriptor_25a794258354ae30)
}

var fileDescriptor_25a794258354ae30 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x3d, 0x4f, 0xc2, 0x40,
	0x18, 0xc7, 0xfb, 0xa2, 0xbc, 0x1c, 0x60, 0xc8, 0xc5, 0xa1, 0x12, 0x52, 0x88, 0x13, 0x31, 0xf1,
	0x1a, 0x71, 0x34, 0x26, 0x02, 0xad, 0xa6, 0x11, 0x91, 0x54, 0xc2, 0x6a, 0x0a, 0xad, 0xe5, 0x7c,
	0xe9, 0x35, 0xed, 0xd1, 0x84, 0x6f, 0xe1, 0xee, 0x17, 0x72, 0x64, 0x74, 0x22, 0xa6, 0x7c, 0x0b,
	0x26, 0x73, 0xd7, 0x0e, 0xc8, 0xc8, 0xd2, 0xfc, 0x9f, 0xf6, 0x77, 0xff, 0x5f, 0x73, 0x0f, 0x68,
	0x11, 0x9f, 0x44, 0xda, 0x94, 0xf8, 0x2f, 0xd8, 0xd3, 0xe2, 0x76, 0x96, 0xe6, 0xa1, 0x4d, 0x31,
	0xf1, 0x35, 0xba, 0x08, 0xdc, 0x08, 0x05, 0x21, 0xa1, 0x04, 0xd6, 0x19, 0x89, 0xd2, 0xef, 0x28,
	0x6e, 0xa3, 0x7f, 0x64, 0xed, 0xd8, 0x23, 0x1e, 0xe1, 0xa0, 0xc6, 0x52, 0x7a, 0xa6, 0x56, 0xdb,
	0x69, 0xdf, 0xea, 0x3b, 0xfd, 0x92, 0x41, 0xa5, 0xb7, 0xdd, 0x01, 0xeb, 0x40, 0xc2, 0x8e, 0x22,
	0x36, 0xc5, 0x56, 0xb1, 0x5b, 0x4e, 0x56, 0x0d, 0xc9, 0xd4, 0x37, 0xfc, 0x69, 0x49, 0xd8, 0x81,
	0x33, 0x50, 0xa4, 0x76, 0xe8, 0xb9, 0xf4, 0x19, 0x3b, 0x8a, 0xc4, 0xa1, 0xfb, 0x64, 0xd5, 0x28,
	0x8c, 0xf8, 0x4b, 0x8e, 0x5e, 0x79, 0x98, 0xce, 0xe6, 0x13, 0x34, 0x25, 0x1f, 0x1a, 0x33, 0x07,
	0x21, 0x79, 0x75, 0xa7, 0x94, 0xe7, 0x73, 0x3b, 0xc0, 0x9a, 0x47, 0xb4, 0xdd, 0x3f, 0xe2, 0xa7,
	0x91, 0xa9, 0x5b, 0x85, 0x34, 0x9a, 0x0e, 0x7c, 0x03, 0x47, 0x99, 0x29, 0x76, 0xc3, 0x08, 0x13,
	0x5f, 0x91, 0xb9, 0x8e, 0x29, 0x6e, 0xf6, 0x56, 0x8c, 0xd3, 0x2e, 0xab, 0x92, 0xce, 0xd9, 0x08,
	0x27, 0xa0, 0x94, 0xc9, 0xd8, 0xe5, 0x28, 0x07, 0xdc, 0xd4, 0xd9, 0xac, 0x1a, 0xd7, 0x7b, 0x9b,
	0x46, 0x8b, 0xc0, 0xb5, 0x40, 0x3a, 0xb0, 0x0c, 0x2f, 0x40, 0x2e, 0xb6, 0xdf, 0xe7, 0x6e, 0xa4,
	0xe4, 0x9b, 0x72, 0xab, 0xd4, 0x3e, 0x41, 0x3b, 0xbb, 0x1c, 0xda, 0x74, 0x36, 0x66, 0x84, 0x95,
	0x81, 0x67, 0x08, 0x1c, 0x3e, 0x51, 0x9b, 0xba, 0xb0, 0x04, 0xf2, 0x43, 0x63, 0xa0, 0x9b, 0x83,
	0xbb, 0xaa, 0x00, 0xcb, 0xa0, 0xd0, 0x7b, 0x7c, 0x18, 0xf6, 0x8d, 0x91, 0x51, 0x95, 0x20, 0x00,
	0xb9, 0xdb, 0x8e, 0xd9, 0x37, 0xf4, 0xaa, 0xdc, 0x55, 0xbe, 0x13, 0x55, 0x5c, 0x26, 0xaa, 0xf8,
	0x9b, 0xa8, 0xe2, 0xe7, 0x5a, 0x15, 0x96, 0x6b, 0x55, 0xf8, 0x59, 0xab, 0xc2, 0x24, 0xc7, 0xd7,
	0x7d, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff, 0x84, 0x98, 0xf4, 0x8c, 0x6a, 0x02, 0x00, 0x00,
}

func (m *Configuration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Configuration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Configuration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Values) > 0 {
		for iNdEx := len(m.Values) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Values[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.TargetType) > 0 {
		i -= len(m.TargetType)
		copy(dAtA[i:], m.TargetType)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.TargetType)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TargetVersion) > 0 {
		i -= len(m.TargetVersion)
		copy(dAtA[i:], m.TargetVersion)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.TargetVersion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TargetID) > 0 {
		i -= len(m.TargetID)
		copy(dAtA[i:], m.TargetID)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.TargetID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Configuration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.TargetID)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.TargetVersion)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.TargetType)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if len(m.Values) > 0 {
		for _, e := range m.Values {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Configuration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Configuration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Configuration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = ID(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetID = github_com_onosproject_onos_api_go_onos_config_v2_target.ID(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetVersion = github_com_onosproject_onos_api_go_onos_config_v2_target.Version(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetType = github_com_onosproject_onos_api_go_onos_config_v2_target.Type(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Values = append(m.Values, &v2.PathValue{})
			if err := m.Values[len(m.Values)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
