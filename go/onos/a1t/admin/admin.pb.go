// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: onos/a1t/admin/admin.proto

// Package onos.a1t.a1 defines the interior gRPC interfaces for xApps to interact with A1T.

package a1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetXAppConnectionsRequest struct {
	XappId string `protobuf:"bytes,1,opt,name=xapp_id,json=xappId,proto3" json:"xapp_id,omitempty"`
}

func (m *GetXAppConnectionsRequest) Reset()         { *m = GetXAppConnectionsRequest{} }
func (m *GetXAppConnectionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetXAppConnectionsRequest) ProtoMessage()    {}
func (*GetXAppConnectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{0}
}
func (m *GetXAppConnectionsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetXAppConnectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetXAppConnectionsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetXAppConnectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetXAppConnectionsRequest.Merge(m, src)
}
func (m *GetXAppConnectionsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetXAppConnectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetXAppConnectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetXAppConnectionsRequest proto.InternalMessageInfo

func (m *GetXAppConnectionsRequest) GetXappId() string {
	if m != nil {
		return m.XappId
	}
	return ""
}

type GetXAppConnectionResponse struct {
	XappId                   string `protobuf:"bytes,1,opt,name=xapp_id,json=xappId,proto3" json:"xapp_id,omitempty"`
	SupportedA1Service       string `protobuf:"bytes,2,opt,name=supported_a1_service,json=supportedA1Service,proto3" json:"supported_a1_service,omitempty"`
	SupportedA1ServiceTypeId string `protobuf:"bytes,3,opt,name=supported_a1_service_type_id,json=supportedA1ServiceTypeId,proto3" json:"supported_a1_service_type_id,omitempty"`
	XappA1Endpoint           string `protobuf:"bytes,4,opt,name=xapp_a1_endpoint,json=xappA1Endpoint,proto3" json:"xapp_a1_endpoint,omitempty"`
}

func (m *GetXAppConnectionResponse) Reset()         { *m = GetXAppConnectionResponse{} }
func (m *GetXAppConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*GetXAppConnectionResponse) ProtoMessage()    {}
func (*GetXAppConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{1}
}
func (m *GetXAppConnectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetXAppConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetXAppConnectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetXAppConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetXAppConnectionResponse.Merge(m, src)
}
func (m *GetXAppConnectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetXAppConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetXAppConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetXAppConnectionResponse proto.InternalMessageInfo

func (m *GetXAppConnectionResponse) GetXappId() string {
	if m != nil {
		return m.XappId
	}
	return ""
}

func (m *GetXAppConnectionResponse) GetSupportedA1Service() string {
	if m != nil {
		return m.SupportedA1Service
	}
	return ""
}

func (m *GetXAppConnectionResponse) GetSupportedA1ServiceTypeId() string {
	if m != nil {
		return m.SupportedA1ServiceTypeId
	}
	return ""
}

func (m *GetXAppConnectionResponse) GetXappA1Endpoint() string {
	if m != nil {
		return m.XappA1Endpoint
	}
	return ""
}

type GetPolicyTypeObjectRequest struct {
	PolicyTypeId string `protobuf:"bytes,1,opt,name=policy_type_id,json=policyTypeId,proto3" json:"policy_type_id,omitempty"`
}

func (m *GetPolicyTypeObjectRequest) Reset()         { *m = GetPolicyTypeObjectRequest{} }
func (m *GetPolicyTypeObjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetPolicyTypeObjectRequest) ProtoMessage()    {}
func (*GetPolicyTypeObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{2}
}
func (m *GetPolicyTypeObjectRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPolicyTypeObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPolicyTypeObjectRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPolicyTypeObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyTypeObjectRequest.Merge(m, src)
}
func (m *GetPolicyTypeObjectRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetPolicyTypeObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyTypeObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyTypeObjectRequest proto.InternalMessageInfo

func (m *GetPolicyTypeObjectRequest) GetPolicyTypeId() string {
	if m != nil {
		return m.PolicyTypeId
	}
	return ""
}

type GetPolicyTypeObjectResponse struct {
	PolicyTypeId     string   `protobuf:"bytes,1,opt,name=policy_type_id,json=policyTypeId,proto3" json:"policy_type_id,omitempty"`
	PolicyIds        []string `protobuf:"bytes,2,rep,name=policy_ids,json=policyIds,proto3" json:"policy_ids,omitempty"`
	PolicyTypeObject string   `protobuf:"bytes,3,opt,name=policy_type_object,json=policyTypeObject,proto3" json:"policy_type_object,omitempty"`
}

func (m *GetPolicyTypeObjectResponse) Reset()         { *m = GetPolicyTypeObjectResponse{} }
func (m *GetPolicyTypeObjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetPolicyTypeObjectResponse) ProtoMessage()    {}
func (*GetPolicyTypeObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{3}
}
func (m *GetPolicyTypeObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPolicyTypeObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPolicyTypeObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPolicyTypeObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyTypeObjectResponse.Merge(m, src)
}
func (m *GetPolicyTypeObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetPolicyTypeObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyTypeObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyTypeObjectResponse proto.InternalMessageInfo

func (m *GetPolicyTypeObjectResponse) GetPolicyTypeId() string {
	if m != nil {
		return m.PolicyTypeId
	}
	return ""
}

func (m *GetPolicyTypeObjectResponse) GetPolicyIds() []string {
	if m != nil {
		return m.PolicyIds
	}
	return nil
}

func (m *GetPolicyTypeObjectResponse) GetPolicyTypeObject() string {
	if m != nil {
		return m.PolicyTypeObject
	}
	return ""
}

type GetPolicyObjectRequest struct {
	PolicyTypeId   string `protobuf:"bytes,1,opt,name=policy_type_id,json=policyTypeId,proto3" json:"policy_type_id,omitempty"`
	PolicyObjectId string `protobuf:"bytes,2,opt,name=policy_object_id,json=policyObjectId,proto3" json:"policy_object_id,omitempty"`
}

func (m *GetPolicyObjectRequest) Reset()         { *m = GetPolicyObjectRequest{} }
func (m *GetPolicyObjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetPolicyObjectRequest) ProtoMessage()    {}
func (*GetPolicyObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{4}
}
func (m *GetPolicyObjectRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPolicyObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPolicyObjectRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPolicyObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyObjectRequest.Merge(m, src)
}
func (m *GetPolicyObjectRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetPolicyObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyObjectRequest proto.InternalMessageInfo

func (m *GetPolicyObjectRequest) GetPolicyTypeId() string {
	if m != nil {
		return m.PolicyTypeId
	}
	return ""
}

func (m *GetPolicyObjectRequest) GetPolicyObjectId() string {
	if m != nil {
		return m.PolicyObjectId
	}
	return ""
}

type GetPolicyObjectResponse struct {
	PolicyTypeId   string `protobuf:"bytes,1,opt,name=policy_type_id,json=policyTypeId,proto3" json:"policy_type_id,omitempty"`
	PolicyObjectId string `protobuf:"bytes,2,opt,name=policy_object_id,json=policyObjectId,proto3" json:"policy_object_id,omitempty"`
	PolicyObject   string `protobuf:"bytes,3,opt,name=policy_object,json=policyObject,proto3" json:"policy_object,omitempty"`
}

func (m *GetPolicyObjectResponse) Reset()         { *m = GetPolicyObjectResponse{} }
func (m *GetPolicyObjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetPolicyObjectResponse) ProtoMessage()    {}
func (*GetPolicyObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{5}
}
func (m *GetPolicyObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPolicyObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPolicyObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPolicyObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyObjectResponse.Merge(m, src)
}
func (m *GetPolicyObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetPolicyObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyObjectResponse proto.InternalMessageInfo

func (m *GetPolicyObjectResponse) GetPolicyTypeId() string {
	if m != nil {
		return m.PolicyTypeId
	}
	return ""
}

func (m *GetPolicyObjectResponse) GetPolicyObjectId() string {
	if m != nil {
		return m.PolicyObjectId
	}
	return ""
}

func (m *GetPolicyObjectResponse) GetPolicyObject() string {
	if m != nil {
		return m.PolicyObject
	}
	return ""
}

type GetPolicyObjectStatusRequest struct {
	PolicyTypeId   string `protobuf:"bytes,1,opt,name=policy_type_id,json=policyTypeId,proto3" json:"policy_type_id,omitempty"`
	PolicyObjectId string `protobuf:"bytes,2,opt,name=policy_object_id,json=policyObjectId,proto3" json:"policy_object_id,omitempty"`
}

func (m *GetPolicyObjectStatusRequest) Reset()         { *m = GetPolicyObjectStatusRequest{} }
func (m *GetPolicyObjectStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetPolicyObjectStatusRequest) ProtoMessage()    {}
func (*GetPolicyObjectStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{6}
}
func (m *GetPolicyObjectStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPolicyObjectStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPolicyObjectStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPolicyObjectStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyObjectStatusRequest.Merge(m, src)
}
func (m *GetPolicyObjectStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetPolicyObjectStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyObjectStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyObjectStatusRequest proto.InternalMessageInfo

func (m *GetPolicyObjectStatusRequest) GetPolicyTypeId() string {
	if m != nil {
		return m.PolicyTypeId
	}
	return ""
}

func (m *GetPolicyObjectStatusRequest) GetPolicyObjectId() string {
	if m != nil {
		return m.PolicyObjectId
	}
	return ""
}

type GetPolicyObjectStatusResponse struct {
	PolicyTypeId       string `protobuf:"bytes,1,opt,name=policy_type_id,json=policyTypeId,proto3" json:"policy_type_id,omitempty"`
	PolicyObjectId     string `protobuf:"bytes,2,opt,name=policy_object_id,json=policyObjectId,proto3" json:"policy_object_id,omitempty"`
	PolicyObjectStatus string `protobuf:"bytes,3,opt,name=policy_object_status,json=policyObjectStatus,proto3" json:"policy_object_status,omitempty"`
}

func (m *GetPolicyObjectStatusResponse) Reset()         { *m = GetPolicyObjectStatusResponse{} }
func (m *GetPolicyObjectStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetPolicyObjectStatusResponse) ProtoMessage()    {}
func (*GetPolicyObjectStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91bce2cfd629db96, []int{7}
}
func (m *GetPolicyObjectStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPolicyObjectStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPolicyObjectStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPolicyObjectStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyObjectStatusResponse.Merge(m, src)
}
func (m *GetPolicyObjectStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetPolicyObjectStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyObjectStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyObjectStatusResponse proto.InternalMessageInfo

func (m *GetPolicyObjectStatusResponse) GetPolicyTypeId() string {
	if m != nil {
		return m.PolicyTypeId
	}
	return ""
}

func (m *GetPolicyObjectStatusResponse) GetPolicyObjectId() string {
	if m != nil {
		return m.PolicyObjectId
	}
	return ""
}

func (m *GetPolicyObjectStatusResponse) GetPolicyObjectStatus() string {
	if m != nil {
		return m.PolicyObjectStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*GetXAppConnectionsRequest)(nil), "onos.a1t.admin.GetXAppConnectionsRequest")
	golang_proto.RegisterType((*GetXAppConnectionsRequest)(nil), "onos.a1t.admin.GetXAppConnectionsRequest")
	proto.RegisterType((*GetXAppConnectionResponse)(nil), "onos.a1t.admin.GetXAppConnectionResponse")
	golang_proto.RegisterType((*GetXAppConnectionResponse)(nil), "onos.a1t.admin.GetXAppConnectionResponse")
	proto.RegisterType((*GetPolicyTypeObjectRequest)(nil), "onos.a1t.admin.GetPolicyTypeObjectRequest")
	golang_proto.RegisterType((*GetPolicyTypeObjectRequest)(nil), "onos.a1t.admin.GetPolicyTypeObjectRequest")
	proto.RegisterType((*GetPolicyTypeObjectResponse)(nil), "onos.a1t.admin.GetPolicyTypeObjectResponse")
	golang_proto.RegisterType((*GetPolicyTypeObjectResponse)(nil), "onos.a1t.admin.GetPolicyTypeObjectResponse")
	proto.RegisterType((*GetPolicyObjectRequest)(nil), "onos.a1t.admin.GetPolicyObjectRequest")
	golang_proto.RegisterType((*GetPolicyObjectRequest)(nil), "onos.a1t.admin.GetPolicyObjectRequest")
	proto.RegisterType((*GetPolicyObjectResponse)(nil), "onos.a1t.admin.GetPolicyObjectResponse")
	golang_proto.RegisterType((*GetPolicyObjectResponse)(nil), "onos.a1t.admin.GetPolicyObjectResponse")
	proto.RegisterType((*GetPolicyObjectStatusRequest)(nil), "onos.a1t.admin.GetPolicyObjectStatusRequest")
	golang_proto.RegisterType((*GetPolicyObjectStatusRequest)(nil), "onos.a1t.admin.GetPolicyObjectStatusRequest")
	proto.RegisterType((*GetPolicyObjectStatusResponse)(nil), "onos.a1t.admin.GetPolicyObjectStatusResponse")
	golang_proto.RegisterType((*GetPolicyObjectStatusResponse)(nil), "onos.a1t.admin.GetPolicyObjectStatusResponse")
}

func init() { proto.RegisterFile("onos/a1t/admin/admin.proto", fileDescriptor_91bce2cfd629db96) }
func init() { golang_proto.RegisterFile("onos/a1t/admin/admin.proto", fileDescriptor_91bce2cfd629db96) }

var fileDescriptor_91bce2cfd629db96 = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0xaf, 0x57, 0x34, 0xd4, 0xa7, 0xd1, 0x4d, 0xa6, 0xb0, 0x10, 0xba, 0x68, 0x0a, 0x08, 0x0a,
	0x8c, 0xb4, 0x01, 0xce, 0x48, 0x19, 0x42, 0x53, 0x4e, 0xa0, 0x6e, 0x07, 0x6e, 0x51, 0x56, 0x5b,
	0x23, 0x68, 0xd8, 0xa6, 0x76, 0x27, 0xfa, 0x25, 0xd0, 0xbe, 0x02, 0xdf, 0x84, 0x23, 0x37, 0x7a,
	0xe4, 0x88, 0xda, 0x2f, 0x82, 0xec, 0xa4, 0xd1, 0xd2, 0x26, 0x6a, 0x41, 0xda, 0xa5, 0x6a, 0xfd,
	0x7e, 0x7f, 0xde, 0xfb, 0xb9, 0x7e, 0x60, 0x73, 0xc6, 0x65, 0x37, 0xf6, 0x55, 0x37, 0x26, 0x9f,
	0x13, 0x96, 0x7e, 0x7a, 0x62, 0xc8, 0x15, 0xc7, 0x4d, 0x5d, 0xf3, 0x62, 0x5f, 0x79, 0xe6, 0xd4,
	0x6e, 0x9d, 0xf1, 0x33, 0x6e, 0x4a, 0x5d, 0xfd, 0x2d, 0x45, 0xb9, 0xaf, 0xe0, 0xde, 0x11, 0x55,
	0x1f, 0x02, 0x21, 0xde, 0x70, 0xc6, 0xe8, 0x40, 0x25, 0x9c, 0xc9, 0x3e, 0xfd, 0x32, 0xa2, 0x52,
	0xe1, 0x5d, 0xb8, 0xf9, 0x35, 0x16, 0x22, 0x4a, 0x88, 0x85, 0xf6, 0x51, 0xa7, 0xd1, 0xdf, 0xd4,
	0x3f, 0x43, 0xe2, 0x4e, 0x50, 0x09, 0xad, 0x4f, 0xa5, 0xe0, 0x4c, 0xd2, 0x4a, 0x1a, 0xee, 0x41,
	0x4b, 0x8e, 0x84, 0xe0, 0x43, 0x45, 0x49, 0x14, 0xfb, 0x91, 0xa4, 0xc3, 0x8b, 0x64, 0x40, 0xad,
	0x0d, 0x83, 0xc2, 0x79, 0x2d, 0xf0, 0x8f, 0xd3, 0x0a, 0x7e, 0x0d, 0xed, 0x32, 0x46, 0xa4, 0xc6,
	0x82, 0x6a, 0xfd, 0xba, 0x61, 0x5a, 0xcb, 0xcc, 0x93, 0xb1, 0xa0, 0x21, 0xc1, 0x1d, 0xd8, 0x31,
	0xad, 0xc4, 0x7e, 0x44, 0x19, 0x11, 0x3c, 0x61, 0xca, 0xba, 0x61, 0x38, 0x4d, 0x7d, 0x1e, 0xf8,
	0x6f, 0xb3, 0x53, 0xf7, 0x10, 0xec, 0x23, 0xaa, 0xde, 0xf3, 0xf3, 0x64, 0x30, 0xd6, 0xe4, 0x77,
	0xa7, 0x9f, 0xe8, 0x40, 0xcd, 0x93, 0x78, 0x08, 0x4d, 0x61, 0x4a, 0xb9, 0x73, 0x3a, 0xd9, 0x96,
	0xc8, 0x09, 0x21, 0x71, 0x2f, 0x11, 0xdc, 0x2f, 0x15, 0xc9, 0x82, 0x59, 0x4b, 0x05, 0xef, 0x01,
	0x64, 0xa8, 0x84, 0x48, 0x6b, 0x63, 0xbf, 0xde, 0x69, 0xf4, 0x1b, 0xe9, 0x49, 0x48, 0x24, 0x3e,
	0x00, 0x7c, 0x55, 0x84, 0x1b, 0x8b, 0x2c, 0x88, 0x1d, 0xb1, 0x60, 0xed, 0x7e, 0x84, 0xbb, 0x79,
	0x47, 0xff, 0x31, 0x92, 0x0e, 0x30, 0x43, 0xa5, 0x46, 0x1a, 0x97, 0x5e, 0x57, 0xc6, 0x4e, 0x45,
	0x43, 0xe2, 0x7e, 0x43, 0xb0, 0xbb, 0x64, 0xf5, 0x4f, 0x83, 0xaf, 0xed, 0x85, 0x1f, 0xc0, 0xad,
	0x02, 0x32, 0x1b, 0x7f, 0xeb, 0x2a, 0xcc, 0x65, 0xd0, 0x5e, 0xe8, 0xe7, 0x58, 0xc5, 0x6a, 0x24,
	0xaf, 0x2b, 0x80, 0xef, 0x08, 0xf6, 0x2a, 0x0c, 0xaf, 0x29, 0x86, 0x1e, 0xb4, 0x8a, 0x48, 0x69,
	0xfc, 0xb2, 0x34, 0xb0, 0x58, 0xea, 0xe4, 0xc5, 0xaf, 0x3a, 0x6c, 0x07, 0xfe, 0x49, 0xa0, 0x37,
	0xc2, 0xfc, 0x8d, 0x9d, 0x03, 0x5e, 0x5e, 0x01, 0xf8, 0x89, 0x57, 0xdc, 0x1f, 0x5e, 0xe5, 0x9a,
	0xb0, 0x57, 0x43, 0xe7, 0x09, 0xf4, 0x10, 0x16, 0x70, 0xbb, 0xe4, 0x89, 0xe0, 0xa7, 0x25, 0x1a,
	0x15, 0x8f, 0xd1, 0x7e, 0xb6, 0x16, 0x36, 0x77, 0x24, 0xb0, 0xbd, 0x70, 0x2d, 0xf8, 0x51, 0xa5,
	0x42, 0xd1, 0xe9, 0xf1, 0x4a, 0x5c, 0xee, 0x72, 0x01, 0x77, 0x4a, 0x2f, 0x1f, 0x1f, 0xac, 0xd0,
	0x28, 0xfc, 0x29, 0xed, 0xe7, 0x6b, 0xa2, 0xe7, 0xbe, 0x87, 0xed, 0x9f, 0x53, 0x07, 0x4d, 0xa6,
	0x0e, 0xfa, 0x33, 0x75, 0xd0, 0xe5, 0xcc, 0xa9, 0xfd, 0x98, 0x39, 0x68, 0x32, 0x73, 0x6a, 0xbf,
	0x67, 0x4e, 0xed, 0x74, 0xd3, 0x6c, 0xf9, 0x97, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x68,
	0x8b, 0x27, 0x29, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// A1TAdminServiceClient is the client API for A1TAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type A1TAdminServiceClient interface {
	// GetXAppConnections
	GetXAppConnections(ctx context.Context, in *GetXAppConnectionsRequest, opts ...grpc.CallOption) (A1TAdminService_GetXAppConnectionsClient, error)
	// GetPolicyTypeObject
	GetPolicyTypeObject(ctx context.Context, in *GetPolicyTypeObjectRequest, opts ...grpc.CallOption) (A1TAdminService_GetPolicyTypeObjectClient, error)
	// GetPolicyObject
	GetPolicyObject(ctx context.Context, in *GetPolicyObjectRequest, opts ...grpc.CallOption) (A1TAdminService_GetPolicyObjectClient, error)
	// GetPolicyObjectStatus
	GetPolicyObjectStatus(ctx context.Context, in *GetPolicyObjectStatusRequest, opts ...grpc.CallOption) (A1TAdminService_GetPolicyObjectStatusClient, error)
}

type a1TAdminServiceClient struct {
	cc *grpc.ClientConn
}

func NewA1TAdminServiceClient(cc *grpc.ClientConn) A1TAdminServiceClient {
	return &a1TAdminServiceClient{cc}
}

func (c *a1TAdminServiceClient) GetXAppConnections(ctx context.Context, in *GetXAppConnectionsRequest, opts ...grpc.CallOption) (A1TAdminService_GetXAppConnectionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_A1TAdminService_serviceDesc.Streams[0], "/onos.a1t.admin.A1TAdminService/GetXAppConnections", opts...)
	if err != nil {
		return nil, err
	}
	x := &a1TAdminServiceGetXAppConnectionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type A1TAdminService_GetXAppConnectionsClient interface {
	Recv() (*GetXAppConnectionResponse, error)
	grpc.ClientStream
}

type a1TAdminServiceGetXAppConnectionsClient struct {
	grpc.ClientStream
}

func (x *a1TAdminServiceGetXAppConnectionsClient) Recv() (*GetXAppConnectionResponse, error) {
	m := new(GetXAppConnectionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *a1TAdminServiceClient) GetPolicyTypeObject(ctx context.Context, in *GetPolicyTypeObjectRequest, opts ...grpc.CallOption) (A1TAdminService_GetPolicyTypeObjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_A1TAdminService_serviceDesc.Streams[1], "/onos.a1t.admin.A1TAdminService/GetPolicyTypeObject", opts...)
	if err != nil {
		return nil, err
	}
	x := &a1TAdminServiceGetPolicyTypeObjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type A1TAdminService_GetPolicyTypeObjectClient interface {
	Recv() (*GetPolicyTypeObjectResponse, error)
	grpc.ClientStream
}

type a1TAdminServiceGetPolicyTypeObjectClient struct {
	grpc.ClientStream
}

func (x *a1TAdminServiceGetPolicyTypeObjectClient) Recv() (*GetPolicyTypeObjectResponse, error) {
	m := new(GetPolicyTypeObjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *a1TAdminServiceClient) GetPolicyObject(ctx context.Context, in *GetPolicyObjectRequest, opts ...grpc.CallOption) (A1TAdminService_GetPolicyObjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_A1TAdminService_serviceDesc.Streams[2], "/onos.a1t.admin.A1TAdminService/GetPolicyObject", opts...)
	if err != nil {
		return nil, err
	}
	x := &a1TAdminServiceGetPolicyObjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type A1TAdminService_GetPolicyObjectClient interface {
	Recv() (*GetPolicyObjectResponse, error)
	grpc.ClientStream
}

type a1TAdminServiceGetPolicyObjectClient struct {
	grpc.ClientStream
}

func (x *a1TAdminServiceGetPolicyObjectClient) Recv() (*GetPolicyObjectResponse, error) {
	m := new(GetPolicyObjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *a1TAdminServiceClient) GetPolicyObjectStatus(ctx context.Context, in *GetPolicyObjectStatusRequest, opts ...grpc.CallOption) (A1TAdminService_GetPolicyObjectStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_A1TAdminService_serviceDesc.Streams[3], "/onos.a1t.admin.A1TAdminService/GetPolicyObjectStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &a1TAdminServiceGetPolicyObjectStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type A1TAdminService_GetPolicyObjectStatusClient interface {
	Recv() (*GetPolicyObjectStatusResponse, error)
	grpc.ClientStream
}

type a1TAdminServiceGetPolicyObjectStatusClient struct {
	grpc.ClientStream
}

func (x *a1TAdminServiceGetPolicyObjectStatusClient) Recv() (*GetPolicyObjectStatusResponse, error) {
	m := new(GetPolicyObjectStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// A1TAdminServiceServer is the server API for A1TAdminService service.
type A1TAdminServiceServer interface {
	// GetXAppConnections
	GetXAppConnections(*GetXAppConnectionsRequest, A1TAdminService_GetXAppConnectionsServer) error
	// GetPolicyTypeObject
	GetPolicyTypeObject(*GetPolicyTypeObjectRequest, A1TAdminService_GetPolicyTypeObjectServer) error
	// GetPolicyObject
	GetPolicyObject(*GetPolicyObjectRequest, A1TAdminService_GetPolicyObjectServer) error
	// GetPolicyObjectStatus
	GetPolicyObjectStatus(*GetPolicyObjectStatusRequest, A1TAdminService_GetPolicyObjectStatusServer) error
}

// UnimplementedA1TAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedA1TAdminServiceServer struct {
}

func (*UnimplementedA1TAdminServiceServer) GetXAppConnections(req *GetXAppConnectionsRequest, srv A1TAdminService_GetXAppConnectionsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetXAppConnections not implemented")
}
func (*UnimplementedA1TAdminServiceServer) GetPolicyTypeObject(req *GetPolicyTypeObjectRequest, srv A1TAdminService_GetPolicyTypeObjectServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPolicyTypeObject not implemented")
}
func (*UnimplementedA1TAdminServiceServer) GetPolicyObject(req *GetPolicyObjectRequest, srv A1TAdminService_GetPolicyObjectServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPolicyObject not implemented")
}
func (*UnimplementedA1TAdminServiceServer) GetPolicyObjectStatus(req *GetPolicyObjectStatusRequest, srv A1TAdminService_GetPolicyObjectStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPolicyObjectStatus not implemented")
}

func RegisterA1TAdminServiceServer(s *grpc.Server, srv A1TAdminServiceServer) {
	s.RegisterService(&_A1TAdminService_serviceDesc, srv)
}

func _A1TAdminService_GetXAppConnections_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetXAppConnectionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(A1TAdminServiceServer).GetXAppConnections(m, &a1TAdminServiceGetXAppConnectionsServer{stream})
}

type A1TAdminService_GetXAppConnectionsServer interface {
	Send(*GetXAppConnectionResponse) error
	grpc.ServerStream
}

type a1TAdminServiceGetXAppConnectionsServer struct {
	grpc.ServerStream
}

func (x *a1TAdminServiceGetXAppConnectionsServer) Send(m *GetXAppConnectionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _A1TAdminService_GetPolicyTypeObject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPolicyTypeObjectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(A1TAdminServiceServer).GetPolicyTypeObject(m, &a1TAdminServiceGetPolicyTypeObjectServer{stream})
}

type A1TAdminService_GetPolicyTypeObjectServer interface {
	Send(*GetPolicyTypeObjectResponse) error
	grpc.ServerStream
}

type a1TAdminServiceGetPolicyTypeObjectServer struct {
	grpc.ServerStream
}

func (x *a1TAdminServiceGetPolicyTypeObjectServer) Send(m *GetPolicyTypeObjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _A1TAdminService_GetPolicyObject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPolicyObjectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(A1TAdminServiceServer).GetPolicyObject(m, &a1TAdminServiceGetPolicyObjectServer{stream})
}

type A1TAdminService_GetPolicyObjectServer interface {
	Send(*GetPolicyObjectResponse) error
	grpc.ServerStream
}

type a1TAdminServiceGetPolicyObjectServer struct {
	grpc.ServerStream
}

func (x *a1TAdminServiceGetPolicyObjectServer) Send(m *GetPolicyObjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _A1TAdminService_GetPolicyObjectStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPolicyObjectStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(A1TAdminServiceServer).GetPolicyObjectStatus(m, &a1TAdminServiceGetPolicyObjectStatusServer{stream})
}

type A1TAdminService_GetPolicyObjectStatusServer interface {
	Send(*GetPolicyObjectStatusResponse) error
	grpc.ServerStream
}

type a1TAdminServiceGetPolicyObjectStatusServer struct {
	grpc.ServerStream
}

func (x *a1TAdminServiceGetPolicyObjectStatusServer) Send(m *GetPolicyObjectStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _A1TAdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "onos.a1t.admin.A1TAdminService",
	HandlerType: (*A1TAdminServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetXAppConnections",
			Handler:       _A1TAdminService_GetXAppConnections_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetPolicyTypeObject",
			Handler:       _A1TAdminService_GetPolicyTypeObject_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetPolicyObject",
			Handler:       _A1TAdminService_GetPolicyObject_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetPolicyObjectStatus",
			Handler:       _A1TAdminService_GetPolicyObjectStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "onos/a1t/admin/admin.proto",
}

func (m *GetXAppConnectionsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetXAppConnectionsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetXAppConnectionsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.XappId) > 0 {
		i -= len(m.XappId)
		copy(dAtA[i:], m.XappId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.XappId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetXAppConnectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetXAppConnectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetXAppConnectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.XappA1Endpoint) > 0 {
		i -= len(m.XappA1Endpoint)
		copy(dAtA[i:], m.XappA1Endpoint)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.XappA1Endpoint)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SupportedA1ServiceTypeId) > 0 {
		i -= len(m.SupportedA1ServiceTypeId)
		copy(dAtA[i:], m.SupportedA1ServiceTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.SupportedA1ServiceTypeId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SupportedA1Service) > 0 {
		i -= len(m.SupportedA1Service)
		copy(dAtA[i:], m.SupportedA1Service)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.SupportedA1Service)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.XappId) > 0 {
		i -= len(m.XappId)
		copy(dAtA[i:], m.XappId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.XappId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetPolicyTypeObjectRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPolicyTypeObjectRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPolicyTypeObjectRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PolicyTypeId) > 0 {
		i -= len(m.PolicyTypeId)
		copy(dAtA[i:], m.PolicyTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetPolicyTypeObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPolicyTypeObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPolicyTypeObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PolicyTypeObject) > 0 {
		i -= len(m.PolicyTypeObject)
		copy(dAtA[i:], m.PolicyTypeObject)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeObject)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PolicyIds) > 0 {
		for iNdEx := len(m.PolicyIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PolicyIds[iNdEx])
			copy(dAtA[i:], m.PolicyIds[iNdEx])
			i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyIds[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.PolicyTypeId) > 0 {
		i -= len(m.PolicyTypeId)
		copy(dAtA[i:], m.PolicyTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetPolicyObjectRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPolicyObjectRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPolicyObjectRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PolicyObjectId) > 0 {
		i -= len(m.PolicyObjectId)
		copy(dAtA[i:], m.PolicyObjectId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PolicyTypeId) > 0 {
		i -= len(m.PolicyTypeId)
		copy(dAtA[i:], m.PolicyTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetPolicyObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPolicyObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPolicyObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PolicyObject) > 0 {
		i -= len(m.PolicyObject)
		copy(dAtA[i:], m.PolicyObject)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyObject)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PolicyObjectId) > 0 {
		i -= len(m.PolicyObjectId)
		copy(dAtA[i:], m.PolicyObjectId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PolicyTypeId) > 0 {
		i -= len(m.PolicyTypeId)
		copy(dAtA[i:], m.PolicyTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetPolicyObjectStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPolicyObjectStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPolicyObjectStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PolicyObjectId) > 0 {
		i -= len(m.PolicyObjectId)
		copy(dAtA[i:], m.PolicyObjectId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PolicyTypeId) > 0 {
		i -= len(m.PolicyTypeId)
		copy(dAtA[i:], m.PolicyTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetPolicyObjectStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPolicyObjectStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPolicyObjectStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PolicyObjectStatus) > 0 {
		i -= len(m.PolicyObjectStatus)
		copy(dAtA[i:], m.PolicyObjectStatus)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyObjectStatus)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PolicyObjectId) > 0 {
		i -= len(m.PolicyObjectId)
		copy(dAtA[i:], m.PolicyObjectId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyObjectId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PolicyTypeId) > 0 {
		i -= len(m.PolicyTypeId)
		copy(dAtA[i:], m.PolicyTypeId)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.PolicyTypeId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintAdmin(dAtA []byte, offset int, v uint64) int {
	offset -= sovAdmin(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetXAppConnectionsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.XappId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetXAppConnectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.XappId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.SupportedA1Service)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.SupportedA1ServiceTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.XappA1Endpoint)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetPolicyTypeObjectRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PolicyTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetPolicyTypeObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PolicyTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	if len(m.PolicyIds) > 0 {
		for _, s := range m.PolicyIds {
			l = len(s)
			n += 1 + l + sovAdmin(uint64(l))
		}
	}
	l = len(m.PolicyTypeObject)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetPolicyObjectRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PolicyTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.PolicyObjectId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetPolicyObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PolicyTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.PolicyObjectId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.PolicyObject)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetPolicyObjectStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PolicyTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.PolicyObjectId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func (m *GetPolicyObjectStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PolicyTypeId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.PolicyObjectId)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.PolicyObjectStatus)
	if l > 0 {
		n += 1 + l + sovAdmin(uint64(l))
	}
	return n
}

func sovAdmin(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAdmin(x uint64) (n int) {
	return sovAdmin(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetXAppConnectionsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetXAppConnectionsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetXAppConnectionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field XappId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.XappId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetXAppConnectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetXAppConnectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetXAppConnectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field XappId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.XappId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportedA1Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportedA1Service = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportedA1ServiceTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportedA1ServiceTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field XappA1Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.XappA1Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPolicyTypeObjectRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPolicyTypeObjectRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPolicyTypeObjectRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPolicyTypeObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPolicyTypeObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPolicyTypeObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyIds = append(m.PolicyIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPolicyObjectRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPolicyObjectRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPolicyObjectRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPolicyObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPolicyObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPolicyObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyObject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyObject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPolicyObjectStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPolicyObjectStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPolicyObjectStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPolicyObjectStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPolicyObjectStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPolicyObjectStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyTypeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyTypeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyObjectId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyObjectId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolicyObjectStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolicyObjectStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAdmin(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAdmin
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAdmin
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAdmin
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAdmin        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAdmin          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAdmin = fmt.Errorf("proto: unexpected end of group")
)
